AWSTemplateFormatVersion: "2010-09-09"
Description: Provisioning a platform stack

Parameters:
  WebsiteDNSWWW:
    Type: String
    Description: Enter your domain name (with www)
    AllowedPattern: ".+"
    ConstraintDescription: This field cannot be empty

  WebsiteDNSWithoutWWW:
    Type: String
    Description: Enter your domain name (without www)
    AllowedPattern: ".+"
    ConstraintDescription: This field cannot be empty

  HostedZoneId:
    Type: String
    Description: Website DNS Hosted Zone Id
    AllowedPattern: ".+"
    ConstraintDescription: This field cannot be empty

  SecondaryRegion:
    Type: String
    Default: "ap-east-1"
    AllowedValues:
      - "us-east-2"
      - "us-east-1"
      - "us-west-1"
      - "us-west-2"
      - "af-south-1"
      - "ap-east-1"
      - "ap-southeast-3"
      - "ap-south-1"
      - "ap-northeast-3"
      - "ap-northeast-2"
      - "ap-southeast-1"
      - "ap-southeast-2"
      - "ap-northeast-1"
      - "ca-central-1"
      - "eu-central-1"
      - "eu-west-1"
      - "eu-west-2"
      - "eu-south-1"
      - "eu-west-3"
      - "eu-north-1"
      - "me-south-1"
      - "sa-east-1"

    Description: Enter your secondary region for S3 Bucket
    ConstraintDescription: This field cannot be empty

Resources:
  WebsiteSSLCertificateWWW:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref WebsiteDNSWWW
      DomainValidationOptions:
        - DomainName: !Ref WebsiteDNSWWW
          HostedZoneId: !Ref HostedZoneId
      SubjectAlternativeNames:
        - !Sub "*.${WebsiteDNSWWW}"
      ValidationMethod: DNS

  WebsiteSSLCertificateWithoutWWW:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref WebsiteDNSWithoutWWW
      DomainValidationOptions:
        - DomainName: !Ref WebsiteDNSWithoutWWW
          HostedZoneId: !Ref HostedZoneId
      SubjectAlternativeNames:
        - !Sub "*.${WebsiteDNSWithoutWWW}"
      ValidationMethod: DNS

  WebsiteCloudfrontWWW:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - WebsiteSSLCertificateWWW
    Properties:
      DistributionConfig:
        Comment: !Sub  Distribution for ${WebsiteDNSWWW}
        PriceClass: PriceClass_All
        Aliases:
          - !Sub ${WebsiteDNSWWW}
        Origins:
          - CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: 'http-only'
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1.2
            DomainName: !Sub '${WebsiteDNSWWW}.s3-website.${SecondaryRegion}.amazonaws.com'
            Id: !Sub 'S3-${AWS::StackName}-root'
        Enabled: True
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: '/index.html'
        DefaultCacheBehavior:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 #Caching Policy Managed By AWS
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: True
          DefaultTTL: 3600 # in seconds
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: !Sub 'S3-${AWS::StackName}-root'
        ViewerCertificate:
          AcmCertificateArn: !Ref WebsiteSSLCertificateWWW
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
        HttpVersion: http2
        IPV6Enabled: true
        DefaultRootObject: index.html

  WebsiteCloudfrontWithoutWWW:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - WebsiteSSLCertificateWithoutWWW
    Properties:
      DistributionConfig:
        Comment: !Sub  Distribution for ${WebsiteDNSWithoutWWW}
        PriceClass: PriceClass_All
        Aliases:
          - !Sub ${WebsiteDNSWithoutWWW}
        Origins:
          - CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: 'http-only'
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1.2
            DomainName: !Sub '${WebsiteDNSWithoutWWW}.s3-website.${SecondaryRegion}.amazonaws.com'
            Id: !Sub 'S3-${AWS::StackName}-root'
        Enabled: True
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: '/index.html'
        DefaultCacheBehavior:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 #Caching Policy Managed By AWS
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: True
          DefaultTTL: 3600 # in seconds
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: !Sub 'S3-${AWS::StackName}-root'
        ViewerCertificate:
          AcmCertificateArn: !Ref WebsiteSSLCertificateWithoutWWW
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
        HttpVersion: http2
        IPV6Enabled: true
        DefaultRootObject: index.html

  Route53WWWRecordSet:
    Type: AWS::Route53::RecordSet
    DependsOn:
      - WebsiteCloudfrontWWW
    Properties:
      Name: !Sub ${WebsiteDNSWWW}
      HostedZoneId: !Sub ${HostedZoneId}
      Type: A
      AliasTarget:
        DNSName: !GetAtt WebsiteCloudfrontWWW.DomainName
        HostedZoneId: Z2FDTNDATAQYW2

  Route53WithoutWWWRecordSet:
    Type: AWS::Route53::RecordSet
    DependsOn:
      - WebsiteCloudfrontWithoutWWW
    Properties:
      Name: !Sub ${WebsiteDNSWithoutWWW}
      HostedZoneId: !Sub ${HostedZoneId}
      Type: A
      AliasTarget:
        DNSName: !GetAtt WebsiteCloudfrontWWW.DomainName
        HostedZoneId: Z2FDTNDATAQYW2

Outputs:
  WebsiteSSLCertificateWWW:
    Value: !Ref WebsiteSSLCertificateWWW
  WebsiteSSLCertificateWithoutWWW:
    Value: !Ref WebsiteSSLCertificateWithoutWWW
  CloudfrontWWW:
    Value: !GetAtt
          - WebsiteCloudfrontWWW
          - DomainName
  CloudfrontWithoutWWW:
    Value: !GetAtt
          - WebsiteCloudfrontWithoutWWW
          - DomainName
  Route53WWWRecordSet:
    Value: !Ref Route53WWWRecordSet
  Route53WithoutWWWRecordSet:
    Value: !Ref Route53WithoutWWWRecordSet